name: ðŸ‘½ Atmos GHA Plan Demo
run-name: ðŸ‘½ Atmos GHA Plan Demo
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
jobs:
  atmos-affected:
    name: determine affected stacks
    runs-on: ubuntu-latest
    outputs:
      affected: ${{ steps.transform.outputs.affected }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - uses: cloudposse/github-action-setup-atmos@v1.0.0
      - name: atmos affected stacks
        id: affected
        run: |
          atmos describe affected --file affected.json
      - name: transform affected output
        id: transform
        shell: bash
        run: |
          affected=$(jq -c '{include: {[.[] | select(.component_type == "terraform")| {stack: .stack, component: .component, full_stack_name: (.stack + "-" + .component)}]}' < $(echo affected.json))
          echo "affected=$affected" >> $GITHUB_OUTPUT

  atmos-plan:
    runs-on: ubuntu-latest
    needs:
      - atmos-affected
    strategy:
      matrix: ${{ fromJson(needs.atmos-affected.outputs.affected) }}
    name: atmos plan ${{ matrix.affected.full_stack_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - uses: cloudposse/github-action-setup-atmos@v1.0.0
      - id: atmos-plan
        run: |
          atmos terraform plan ${{ matrix.full_stack_name }} -out=${{ matrix.full_stack_name }}-${{github.sha}}.planfile
      - uses: cloudposse/github-action-terraform-plan-storage@feature/initial-implementation
        id: store-plan
        with:
          action: storePlan
          planPath: ${{ matrix.affected.full_stack_name }}-${{github.sha}}.planfile
          component: ${{ matrix.affected.component }}
          stack: ${{ matrix.stack }}
          tableName: demo-terraform-plan-storage
          bucketName: demo-terraform-plan-storage
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
          AWS_REGION: us-east-1
